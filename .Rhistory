fish <- which_fish("mangrove", "habitat", fish.data)
library(rfishbase)
fish <- which_fish("mangrove", "habitat", fish.data)
?rfishbase
remotes::install_github("ropensci/rfishbase")
install.packages("rfishbase")
install.packages("rfishbase")
fish <- which_fish()
fish <- species_list(habitat = "mangrove")
fish <- fish.data
fish <- data(fishbase)
remotes::install_github("ropensci/rfishbase")
library(rfishbase)
knitr::opts_chunk$set(echo = TRUE)
list_fields("mangrove")
list_fields("Mangrove")
list_fields("Resilience")
list_fields("Habitat")
which_fish(habitat = "mangrove")
genera("mangrove")
data(fishbase)
force(fishbase)
View(fishbase)
View(fishbase)
habitatSearch("mangrove"
)
species_fields()
species_fields(fishbase)
species(fields = species_list$Habitat)
list_fields(ecology)
list_fields("ecology"
)
ecology(c("Oreochromis niloticus", "Salmo trutta"))
testeco <- ecology(c("Oreochromis niloticus", "Salmo trutta"))
View(testeco)
testeco <- ecology(fields = "Mangroves")
View(testeco)
testeco <-ecology(c("Oreochromis niloticus", "Salmo trutta"))
View(testeco)
testmang <- ecology(fields = "Species", "Mangroves")
View(testmang)
testmang <- ecology(fields = c("Species", "Mangroves"))
View(testmang)
library(tidyverse)
testmang <- ecology(fields = c("Species", "Mangroves")) %>%
filter(!is.na("Mangroves"))
testmang <- ecology(fields = c("Species", "Mangroves")) %>%
filter(Mangroves != "NA")
testmang <- ecology(fields = c("Species", "Mangroves")) %>%
filter(Mangroves != c("NA",0))
filter(Mangroves != "NA", Mangroves != "O"
testmang <- ecology(fields = c("Species", "Mangroves")) %>%
testmang <- ecology(fields = c("Species", "Mangroves")) %>%
filter(Mangroves != "NA", Mangroves != "O")
testmang <- ecology(fields = c("Species", "Mangroves")) %>%
filter(Mangroves != "NA", Mangroves != 0)
unique(testmang$Mangroves)
View(testmang)
heartbeat()
devtools::install_github("cfree14/freeR")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("cfree14/freeR")
install.packages("freeR")
devtools::install_github("cfree14/freeR")
devtools::install_github("james-thorson/FishLife")
devtools::install_github("cfree14/freeR")
?freeR::fishbase
knitr::opts_chunk$set(echo = TRUE)
library(freeR)
eco <- fishbase(dataset = "species")
library(tidyverse)
eco <- fishbase(dataset = "species")
# Retrieve all fish from the databases:
all <- all_fish()
?all_fish
# Retrieve all fish from the databases:
spp <- all_fish()
load("/Volumes/GoogleDrive/My Drive/Research/Habitat-Fishery Links/RAMLDB v4.491/DB Files With Assessment Data/R Data/DBdata[asmt][v4.491].RData")
View(stock)
# Retrieve species names from the RAM database:
ram.sp <- stock$scientificname
# Use that list to query FishBase?
eco <- fishbase(dataset = "ecology", species = ram.sp, cleaned = T)
unique(stock$scientificname)
View(bioparams_notes_views)
?rfishbase
View(timeseries)
# Download the fishbase data?
all.eco <- ecology()
library(rfishbase)
all.eco <- ecology()
View(all.eco)
View(cpue.data)
est.na <- all.eco[-which(is.na(all.eco$Estuaries) & is.na(all.eco$Mangroves))]
est.na <- all.eco[-which(is.na(all.eco$Estuaries) & is.na(all.eco$Mangroves)),]
View(management)
View(est.na)
# Drop species from the ecology table where both "Estuaries" and "Mangroves" are 0
est.nonzero <- est.na[-which(is.na(est.na$Estuaries) & is.na(est.na$Mangroves)),]
# Drop species from the ecology table where both "Estuaries" and "Mangroves" are 0
est.nonzero <- est.na[-which(est.na$Estuaries != 0 & est.na$Mangroves != 0),]
View(est.nonzero)
# Drop species from the ecology table where both "Estuaries" and "Mangroves" are 0
est.nonzero <- est.na %>%
filter(est.na$Estuaries != 0 & est.na$Mangroves != 0)
View(est.nonzero)
# Drop unnecessary columns
est <- est.nonzero %>%
select(Species, Estuaries, Mangroves)
View(est)
?which
# Drop species from the ecology table where both "Estuaries" and "Mangroves" are 0
est.nonzero <- est.na[which(est.na$Estuaries != 0),]
View(est.nonzero)
# Drop species from the ecology table where both "Estuaries" and "Mangroves" are 0
est.nonzero <- est.na[which(est.na$Estuaries != 0 & est.na$Mangroves != 0)]
# Drop species from all of the ecology table where both "Estuaries" and "Mangroves" are NA
est.na <- all.eco[-which(is.na(all.eco$Estuaries) & is.na(all.eco$Mangroves)),] # Now 11827 obs
# Drop species from the ecology table where both "Estuaries" and "Mangroves" are 0
est.nonzero <- est.na[which(est.na$Estuaries != 0 & est.na$Mangroves != 0),]
View(est.nonzero)
# Drop species from the ecology table where both "Estuaries" and "Mangroves" are 0
est.nonzero <- est.na[-which(est.na$Estuaries != 0 & est.na$Mangroves != 0),]
View(est.nonzero)
# Drop species from the ecology table where both "Estuaries" and "Mangroves" are 0
est.nonzero <- est.na[-which(est.na$Estuaries = 0 & est.na$Mangroves = 0),]
# Drop species from the ecology table where both "Estuaries" and "Mangroves" are 0
est.nonzero <- est.na[-which(est.na$Estuaries == 0 & est.na$Mangroves == 0),]
View(est.nonzero)
# Drop unnecessary columns
est <- est.nonzero %>%
select(Species, Estuaries, Mangroves)
est.ram <- est %>%
filter(Species %in% ram.sp)
View(est.ram)
sum(est.ram$Mangroves)
# Now which of those are already defnitely mangroves?
mang.ram <- est.ram[which(est.ram$Mangroves != 0),]
View(mang.ram)
mang.ram.sp <- mang.ram$Species
# Get common names for those 9 from fishbase:
mang.ram.common <- common_names(mang.ram.sp)
View(mang.ram.common)
View(area)
View(stock)
# Save the mangrove-range FAO region number list
mang.fao.regions <- c(01, 03, 04, 06, 31, 34, 41, 47, 51, 57, 61, 71, 77, 81, 87)
View(stock)
all.mang.region.stock <- stock[which(stock$primary_FAOarea %in% mang.fao.regions)]
all.mang.region.stock <- stock[which(stock$primary_FAOarea %in% mang.fao.regions),]
View(all.mang.region.stock)
# Save the mangrove-range FAO region number list
mang.fao.regions <- c("01", "03", "04", "06", 31, 34, 41, 47, 51, 57, 61, 71, 77, 81, 87)
all.mang.region.stock <- stock[which(stock$primary_FAOarea %in% mang.fao.regions),]
View(all.mang.region.stock)
View(stock)
# Save the mangrove-range FAO region number list
mang.fao.regions <- c(1, 3, 4, 6, 31, 34, 41, 47, 51, 57, 61, 71, 77, 81, 87)
all.mang.region.stock <- stock[which(stock$primary_FAOarea %in% mang.fao.regions),]
View(all.mang.region.stock)
View(stock)
all.fao.mangroves <- stock %>%
filter(primary_FAOarea %in% mang.fao.regions)
all.fao.mangroves <- stock %>%
filter(primary_FAOarea == 4)
View(stock)
all.fao.mangroves <- stock %>%
filter(primary_FAOarea == "4")
all.fao.mangroves <- stock %>%
filter(primary_FAOarea == "04")
all.fao.mangroves <- stock %>%
filter(primary_FAOarea == 04)
class(stock$primary_FAOarea)
all.fao.mangroves <- stock %>%
filter(primary_FAOarea == "4")
all.fao.mangroves <- stock %>%
filter(primary_FAOarea %in% c("1", "4"))
all.fao.mangroves <- stock %>%
filter(primary_FAOarea %in% c("2", "4"))
all.fao.mangroves <- stock %>%
filter(primary_FAOarea < 9)
View(all.fao.mangroves)
all.fao.mangroves <- stock %>%
filter(primary_FAOarea > 9)
View(all.fao.mangroves)
View(stock)
test <- stock[which(stock$primary_FAOarea < 10),]
View(test)
test <- stock[which(stock$primary_FAOarea %in% mang.fao.regions),]
test <- stock[which(stock$primary_FAOarea == 4),]
test <- stock[which(stock$primary_FAOarea < 10),]
View(test)
View(all.fao.mangroves)
test <- as.numeric(stock[stock$primary_FAOarea])
test <- as.numeric(stock[stock$primary_FAOarea,])
numericstock <- stock %>%
mutate(FAO = as.numeric(primary_FAOarea))
View(numericstock)
mang.fao.stocks <- numericstock %>%
filter(FAO %in% mang.fao.regions)
View(mang.fao.stocks)
# The column that has
numericstock <- stock %>%
mutate(primary_FAOarea = as.numeric(primary_FAOarea))
# List of
mang.fao.stocks <- numericstock %>%
filter(primary_FAOarea %in% mang.fao.regions)
# Use that list to query FishBase?
eco <- fishbase(dataset = "ecology", species = ram.sp, cleaned = F)
View(metadata)
# How many species make up those 368 stocks?
potential.mang.sp <- unique(mang.fao.stocks$scientificname)
library(freeR) # where Chris Free's `fishbase` function lives
library(tidyverse)
library(rfishbase)
library(here)
load("~/Documents/UCSB/Research/fishbase_query/RAM/DBdata[asmt][v4.491].RData")
View(assessment)
View(metadata)
View(taxonomy)
View(assessment)
View(metadata)
write_csv(metadata, ram-metadata.csv)
# Non-reproducible step: load the RAM RData workspace from the loadDBdata[asmt][v4.491].r file
library(tidyverse)
write_csv(metadata, "ram-metadata.csv")
metadata <- read_csv("ram-metadata.csv")
# Load the RAM legacy database workspace v4.491:
load("DBdata[asmt][v4.491].RData")
?remove
# The species list can easily be retrieved from the metadata table:
remove(list = ls(!metadata))
# The species list can easily be retrieved from the metadata table:
remove(list = ls(-metadata))
# The species list can easily be retrieved from the metadata table:
View(metadata)
# Save the species list as ram.sp
ram.sp <- unique(metadata$scientificname)
View(stock)
# The species list can easily be retrieved from the stock or metadata tables:
# Save the species list as ram.sp
ram.sp <- unique(stock$scientificname)
# The species list can easily be retrieved from the stock or metadata tables:
# Save the species list as ram.sp
ram.sp2 <- unique(stock$scientificname)
remove(ram.sp2)
# Get all the information from the ecology table for all species (note that could provide species within ecology function to just get the info for that species list if desired)
all.eco <- ecology() # Currently 34329 obs
View(all.eco)
fb.species.table <- species()
View(fb.species.table)
# Get all the information from the ecology table for all species (note that could provide species within ecology function to just get the info for that species list if desired)
fb.eco.table <- ecology() # Currently 34329 obs
# Get all the information from the ecology table for all species (note that could provide species within ecology function to just get the info for that species list if desired)
fb.eco.table <- ecology() # Currently 34329 obs
# The species table also contains field for fresh, salt, and brackish water - this might also be helpful:
fb.species.table <- species()
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select(SpecCode:FBname, "Fresh", "Brak", "Saltwater")
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select(SpecCode:FBname, "Fresh", "Brack", "Saltwater")
View(fb.sp.subset)
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select(SpecCode:FBname, -"Author", "Fresh", "Brack", "Saltwater")
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Fresh", "Brack", "Saltwater")
fb.eco.subset <- fb.eco.table %>%
select("SpecCode", "Species", "Estuaries", "Saltmarsh", "Mangroves", "MarshesSwamps", "AddRems")
fb.eco.subset <- fb.eco.table %>%
select("SpecCode", "Species", "Estuaries", "Saltmarshes", "Mangroves", "MarshesSwamps", "AddRems")
View(fb.eco.subset)
# Join the two tables together
fb.join <- join(fb.species.table, fb.eco.table)
library(tidyverse)
# Join the two tables together
fb.join <- full_join(fb.species.table, fb.eco.table)
?join
# Join the two tables together
fb.join <- full_join(fb.species.table, fb.eco.table, by = "SpecCode", "Species")
# Join the two tables together
fb.join <- full_join(fb.species.table, fb.eco.table, by = "SpecCode")
View(fb.join)
# Join the two tables together
fb.join <- full_join(fb.species.subset, fb.eco.subset, by = "SpecCode")
# Join the two tables together
fb.join <- full_join(fb.sp.subset, fb.eco.subset, by = "SpecCode")
# Join the two tables together
fb.join <- full_join(fb.sp.subset, fb.eco.subset, by = "SpecCode", "Species")
View(fb.join)
# Join the two tables together
fb.join <- full_join(fb.sp.subset, fb.eco.subset, by = c("SpecCode","Species"))
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Brack", "Saltwater")
fb.eco.subset <- fb.eco.table %>%
select("SpecCode", "Species", "Estuaries", "Saltmarshes", "Mangroves", "MarshesSwamps", "AddRems")
# Join the two subsets together
fb.join <- full_join(fb.sp.subset, fb.eco.subset, by = c("SpecCode","Species"))
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Brack", "Saltwater") %>%
filter(!is.na("Brack"))
View(fb.sp.subset)
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Brack", "Saltwater") %>%
filter("Brack" != 0 | "Saltwater" != 0)
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Brack", "Saltwater") %>%
filter("Brack" != 0)
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Brack", "Saltwater") %>%
filter("Brack" != "0")
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Brack", "Saltwater") %>%
mutate(Brack = as.numeric(Brack))
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Brack", "Saltwater") %>%
mutate(Brack = as.numeric(Brack)) %>%
filter("Brack" != 0)
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Brack", "Saltwater") %>%
mutate(Brack = as.numeric(Brack)) %>%
filter(Brack != 0)
View(fb.sp.subset)
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Brack", "Saltwater") %>%
filter(Brack != 0)
# Create subsets of tables to make easier to work with
fb.sp.subset <- fb.species.table %>%
select("SpecCode", "Species", "Fresh", "Brack", "Saltwater") %>%
filter(Brack != 0) # only keep species noted as occupying brackish water
View(fb.sp.subset)
fb.eco.subset <- fb.eco.table %>%
select("SpecCode", "Species", "Estuaries", "Saltmarshes", "Mangroves", "MarshesSwamps", "AddRems") %>%
filter(Estuaries:MarshesSwamps != 0)
fb.eco.subset <- fb.eco.table %>%
select("SpecCode", "Species", "Estuaries", "Saltmarshes", "Mangroves", "MarshesSwamps", "AddRems") %>%
filter_at(vars(Estuaries:MarshesSwamps), all_vars(.!=0))
View(fb.eco.subset)
fb.eco.subset <- fb.eco.table %>%
select("SpecCode", "Species", "Estuaries", "Saltmarshes", "Mangroves", "MarshesSwamps", "AddRems") %>%
filter_at(vars(Estuaries:MarshesSwamps), any_vars(.!=0))
View(fb.eco.subset)
# Join the two subsets together
fb.join <- full_join(fb.sp.subset, fb.eco.subset, by = c("SpecCode","Species"))
View(all.eco)
# Retrieve spawning table for all species
fb.spawning.table <- spawning()
View(fb.spawning.table)
unique(fb.spawning.table$SpawningGround)
fb.spawning.subset <- fb.spawning.table %>%
filter(SpawningGround %in% c("coastal", "estuarine"))
View(fb.spawning.subset)
fb.spawning.subset <- fb.spawning.table %>%
select("SpecCode", "Species", "SpawningGround", "Spawningarea") %>%
filter(SpawningGround %in% c("coastal", "estuarine"))
# Join the subsets together:
fb.ecosp <- full_join(fb.sp.subset, fb.eco.subset, by = c("SpecCode","Species"))
fb.all <- full_join(fb.ecosp, fb.spawning.subset, by = c("SpecCode", "Species"))
fb.spawning.subset <- fb.spawning.table %>%
select("SpecCode", "Species", "SpawningGround", "Spawningarea") %>%
filter(SpawningGround %in% c("estuarine")) #coastal and estuarine spawners
fb.spawning.subset <- fb.spawning.table %>%
select("SpecCode", "Species", "SpawningGround", "Spawningarea") %>%
filter(SpawningGround %in% c("coastal", "estuarine")) #coastal and estuarine spawners
# Join the subsets together:
fb.ecosp <- full_join(fb.sp.subset, fb.eco.subset, by = c("SpecCode","Species")) #3793
fb.all <- full_join(fb.ecosp, fb.spawning.subset, by = c("SpecCode", "Species")) #4489 - coastal and estuarine spawners
View(fb.all)
# Reproduction?
fb.repro.table <- reproduction()
View(fb.repro.table)
# Filter the FishBase dataframe of species that might use mangroves for ones listed in RAM:
ram_mangroves <- fb.all %>%
filter(Species %in% ram.sp)
View(ram_mangroves)
# Exclude the coastal spawners, only estuarine spawners -
ram_mangroves_nospawning <- fb.all %>%
filter(Species %in% ram.sp) %>%
filter(SpawningGround == "estuarine")
View(ram_mangroves_nospawning)
# Exclude the coastal spawners, only estuarine spawners -
ram_mangroves_nospawning <- fb.all %>%
filter(Species %in% ram.sp) %>%
filter(SpawningGround != "coastal")
# Exclude the coastal spawners, only estuarine spawners -
ram_mangroves_nospawning <- fb.all %>%
filter(Species %in% ram.sp) %>%
filter(SpawningGround != "coastal")
# Exclude the coastal spawners, only estuarine spawners -
ram_mangroves_nospawning <- fb.all %>%
filter(Species %in% ram.sp)
# Exclude the coastal spawners, only estuarine spawners -
ram_mangroves_nospawning <- fb.all %>%
filter(Species %in% ram.sp) %>%
filter(SpawningGround != "coastal")
# Exclude the coastal spawners, only estuarine spawners -
ram_mangroves_nospawning <- fb.all %>%
filter(Species %in% ram.sp) %>%
filter(SpawningGround != "coastal", na.rm = F)
# Exclude the coastal spawners, only estuarine spawners -
ram_mangroves_nospawning <- fb.all %>%
filter(Species %in% ram.sp) %>%
filter(SpawningGround != "coastal" | is.na(SpawningGround))
# Exclude the coastal spawners, only estuarine spawners -
ram_mangroves_nospawning <- fb.all %>%
filter(Species %in% ram.sp) %>%
filter(SpawningGround = "estuarine" | is.na(SpawningGround))
# Exclude the coastal spawners, only estuarine spawners -
ram_mangroves_nospawning <- fb.all %>%
filter(Species %in% ram.sp) %>%
filter(SpawningGround == "estuarine" | is.na(SpawningGround))
# The column that has the FAO area number is a character and for some reason causing problems with the numbers <10
# so will convert that column to numeric to be able to compare to the list above
numericstock <- stock %>%
mutate(primary_FAOarea = as.numeric(primary_FAOarea))
# Filter the RAM stocks list for stocks that are located in the FAO regions that overlap with mangroves
mang.fao.stocks <- numericstock %>%
filter(primary_FAOarea %in% mang.fao.regions) # 368 potential mangrove-associated stocks in RAM?
# Save the mangrove-range FAO region number list
mang.fao.regions <- c(1, 3, 4, 6, 31, 34, 41, 47, 51, 57, 61, 71, 77, 81, 87)
# The column that has the FAO area number is a character and for some reason causing problems with the numbers <10
# so will convert that column to numeric to be able to compare to the list above
numericstock <- stock %>%
mutate(primary_FAOarea = as.numeric(primary_FAOarea))
# Filter the RAM stocks list for stocks that are located in the FAO regions that overlap with mangroves
mang.fao.stocks <- numericstock %>%
filter(primary_FAOarea %in% mang.fao.regions) # 368 potential mangrove-associated stocks in RAM?
# How many species make up those 368 stocks?
potential.mang.sp <- unique(mang.fao.stocks$scientificname) # 197 potential mangrove-associated species in RAM
View(mang.fao.stocks)
# The column that has the FAO area number is a character and for some reason causing problems with the numbers <10
# so will convert that column to numeric to be able to compare to the list above
numericstock <- stock %>%
mutate(primary_FAOarea = as.numeric(primary_FAOarea))
# Filter the RAM stocks list for stocks that are located in the FAO regions that overlap with mangroves
ram_mangrove_stocks <- numericstock %>%
filter(primary_FAOarea %in% fao_mangrove_regions) # 368 potential mangrove-associated stocks in RAM based on geography
# Save the mangrove-range FAO region number list
fao_mangrove_regions <- c(1, 3, 4, 6, 31, 34, 41, 47, 51, 57, 61, 71, 77, 81, 87)
# Filter the RAM stocks list for stocks that are located in the FAO regions that overlap with mangroves
ram_mangrove_stocks <- numericstock %>%
filter(primary_FAOarea %in% fao_mangrove_regions) # 368 potential mangrove-associated stocks in RAM based on geography
# But how many of those might use mangroves based on the FishBase information?
ram_fb_potential <- ram_mangroves_nospawning %>%
filter(Species %in% ram_mangrove_stocks$scientificname)
# How many species make up those 30 stocks?
potential.mang.sp2 <- unique(ram_fb_potential$Species)
View(ram_fb_potential)
# But how many of those might use mangroves based on the FishBase information?
ram_fb <- ram_mangrove_stocks %>%
filter(scientificname %in% ram_mangroves_nospawning)
# But how many of those might use mangroves based on the FishBase information?
ram_fb <- ram_mangrove_stocks %>%
filter(scientificname %in% ram_mangroves_nospawning$Species)
# How many species make up those 30 stocks?
potential_mang.sp2 <- unique(ram_fb_$Sscientificname) # 26 different species
# How many species make up those 30 stocks?
potential_mang.sp2 <- unique(ram_fb$Sscientificname) # 26 different species
# But how many of those might use mangroves based on the FishBase information?
ram_fb <- ram_mangrove_stocks %>%
filter(scientificname %in% ram_mangroves_nospawning$Species) #43
# How many species make up those 30 stocks?
potential.mang.sp2 <- unique(ram_fb$scientificname) # 26 different species
# How many species make up those 30 stocks?
potential.mang.sp2 <- unique(ram_fb$scientificname) # 26 different species
potential.mang.sp2.common <- common_names(ram_fb$scientificname)
View(potential.mang.sp2.common)
# The fishbase info for those 26 species:
p2_info <- ram_mangroves_nospawning %>%
filter(Species %in% potential.mang.sp2)
View(p2_info)
View(stock)
View(tl.data)
